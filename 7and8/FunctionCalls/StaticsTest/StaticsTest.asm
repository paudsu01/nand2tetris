// Set SP=261
@261
D=A
@SP
M=D
// goto Sys.init
@Sys.init
0;JMP
// function Class1.set 0
(Class1.set)
// push argument 0
@ARG
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop static 0
@Class1.vm.0
D=A
@5
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@5
A=M
M=D
// push argument 1
@ARG
D=M
@1
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop static 1
@Class1.vm.1
D=A
@5
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@5
A=M
M=D
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@5
M=D
@5
D=A
@5
D=M-D
A=D
D=M
@6
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@1
D=A
@5
D=M-D
A=D
D=M
@4
M=D
@2
D=A
@5
D=M-D
A=D
D=M
@3
M=D
@3
D=A
@5
D=M-D
A=D
D=M
@2
M=D
@4
D=A
@5
D=M-D
A=D
D=M
@1
M=D
@6
A=M
0;JMP
// function Class1.get 0
(Class1.get)
// push static 0
@Class1.vm.0
D=M
@SP
A=M
M=D
@SP
M=M+1
// push static 1
@Class1.vm.1
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
// return
@LCL
D=M
@5
M=D
@5
D=A
@5
D=M-D
A=D
D=M
@6
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@1
D=A
@5
D=M-D
A=D
D=M
@4
M=D
@2
D=A
@5
D=M-D
A=D
D=M
@3
M=D
@3
D=A
@5
D=M-D
A=D
D=M
@2
M=D
@4
D=A
@5
D=M-D
A=D
D=M
@1
M=D
@6
A=M
0;JMP
// function Class2.set 0
(Class2.set)
// push argument 0
@ARG
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop static 0
@Class2.vm.0
D=A
@5
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@5
A=M
M=D
// push argument 1
@ARG
D=M
@1
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop static 1
@Class2.vm.1
D=A
@5
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@5
A=M
M=D
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@5
M=D
@5
D=A
@5
D=M-D
A=D
D=M
@6
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@1
D=A
@5
D=M-D
A=D
D=M
@4
M=D
@2
D=A
@5
D=M-D
A=D
D=M
@3
M=D
@3
D=A
@5
D=M-D
A=D
D=M
@2
M=D
@4
D=A
@5
D=M-D
A=D
D=M
@1
M=D
@6
A=M
0;JMP
// function Class2.get 0
(Class2.get)
// push static 0
@Class2.vm.0
D=M
@SP
A=M
M=D
@SP
M=M+1
// push static 1
@Class2.vm.1
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
// return
@LCL
D=M
@5
M=D
@5
D=A
@5
D=M-D
A=D
D=M
@6
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@1
D=A
@5
D=M-D
A=D
D=M
@4
M=D
@2
D=A
@5
D=M-D
A=D
D=M
@3
M=D
@3
D=A
@5
D=M-D
A=D
D=M
@2
M=D
@4
D=A
@5
D=M-D
A=D
D=M
@1
M=D
@6
A=M
0;JMP
// function Sys.init 0
(Sys.init)
// push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
// call Class1.set 2
//push return-address, LCL, ARG, THIS, THAT
@Class1.set$return0
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
//ARG=SP-n-5
@7
D=A
@SP
D=M-D
@ARG
M=D
//LCL=SP
@SP
D=M
@LCL
M=D
@Class1.set
0;JMP
(Class1.set$return0)
// pop temp 0
@5
D=A
@0
D=D+A
@5
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@5
A=M
M=D
// push constant 23
@23
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
// call Class2.set 2
//push return-address, LCL, ARG, THIS, THAT
@Class2.set$return1
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
//ARG=SP-n-5
@7
D=A
@SP
D=M-D
@ARG
M=D
//LCL=SP
@SP
D=M
@LCL
M=D
@Class2.set
0;JMP
(Class2.set$return1)
// pop temp 0
@5
D=A
@0
D=D+A
@5
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@5
A=M
M=D
// call Class1.get 0
//push return-address, LCL, ARG, THIS, THAT
@Class1.get$return2
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
//ARG=SP-n-5
@5
D=A
@SP
D=M-D
@ARG
M=D
//LCL=SP
@SP
D=M
@LCL
M=D
@Class1.get
0;JMP
(Class1.get$return2)
// call Class2.get 0
//push return-address, LCL, ARG, THIS, THAT
@Class2.get$return3
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
//ARG=SP-n-5
@5
D=A
@SP
D=M-D
@ARG
M=D
//LCL=SP
@SP
D=M
@LCL
M=D
@Class2.get
0;JMP
(Class2.get$return3)
// Label END
(END)
// goto END
@END
0;JMP
