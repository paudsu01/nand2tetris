class Math {
    static Array twoToTheIndexValue; 

    function void init() {

	var int current_value, current_index;
	let current_value = 1;
	let current_index = 0;
	let twoToTheIndexValue = Array.new(16);

	while (current_index < 16){
		let twoToTheIndexValue[current_index] = current_value;
		let current_value = current_value + current_value;
		let current_index = current_index + 1;
	}
	return;
    }


    function int get_bit(int num, int bit) {

	var int value, return_value;
	let value = twoToTheIndexValue[bit] & num;
	if (value = 0){
		let return_value = value;
	} else {
		let return_value = 1;}
	return return_value;
    }	


    function int multiply(int x, int y) {
	var int sum, shifted_x, index;
	let index = 0;
	let shifted_x = x;

	while (index < 16){
		if (Math.get_bit(y, index) = 1){
			let sum = sum + shifted_x;
		}
		let shifted_x = shifted_x + shifted_x;
		let index = index + 1;
	}
	return sum;
    }

   // equivalent of x % y
    function int remainder(int x, int y) {
	var int quotient;
	let quotient = Math.divide(x, y);	
	return (x - (y * quotient));
    }

    function int positive_divide(int x, int y) {
	var int quotient, ret_value;
	if (y = 0){
		do Sys.error(3);
	}

	if ((y > x) | (y < 0)) {
		let ret_value = 0;
	} else {
		let quotient = Math.positive_divide(x, y + y); 
		let quotient = quotient + quotient;
		if ((x - (quotient * y)) < y){
			let ret_value = quotient;
		} else {
			let ret_value = quotient + 1;
		}
	}
	
	return ret_value;
    }

    function int divide(int x, int y) {
	var int abs_x, abs_y, ret_value;

	let abs_x = Math.abs(x);
	let abs_y = Math.abs(y);
	let ret_value = Math.positive_divide(abs_x, abs_y);

	if (x < 0) {let ret_value = - ret_value;}
	if (y < 0) {let ret_value = - ret_value;}

	return ret_value;
    }


    function int sqrt(int x) {
	var int y, j, intermediate_value, squared_val;
	let y = 0;
	let j = 7;
	
	while ((j > 0) | (j=0)){
		let intermediate_value = y + twoToTheIndexValue[j];
		let squared_val = intermediate_value * intermediate_value;

		if (((squared_val < x) | (squared_val = x)) & (squared_val > 0)){
			let y = intermediate_value;
		}
		let j = j - 1;
	}
	return y;
	}

    function int max(int a, int b) {
	var int value;
	if (a > b){
		let value = a;
	} else {
		let value = b;
	}
	return value;
    }

    function int min(int a, int b) {
	var int value;
	if (a < b){
		let value = a;
	} else {
		let value = b;
	}
	return value;
    }

    function int abs(int x) {
	var int value;
	if (x < 0){
		let value = -x;
    	}
	else {
		let value = x;
	}
	return value;
    }

    function Array getTwoToThePowersArray(){
	return twoToTheIndexValue;
    }

}
